// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MonitoringJob.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type JobRequest struct {
	Category             string   `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	TargetUrl            string   `protobuf:"bytes,2,opt,name=target_url,json=targetUrl,proto3" json:"target_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobRequest) Reset()         { *m = JobRequest{} }
func (m *JobRequest) String() string { return proto.CompactTextString(m) }
func (*JobRequest) ProtoMessage()    {}
func (*JobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ba43996b6b0b0cb, []int{0}
}

func (m *JobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobRequest.Unmarshal(m, b)
}
func (m *JobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobRequest.Marshal(b, m, deterministic)
}
func (m *JobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobRequest.Merge(m, src)
}
func (m *JobRequest) XXX_Size() int {
	return xxx_messageInfo_JobRequest.Size(m)
}
func (m *JobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JobRequest proto.InternalMessageInfo

func (m *JobRequest) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *JobRequest) GetTargetUrl() string {
	if m != nil {
		return m.TargetUrl
	}
	return ""
}

// The response message containing the greetings
type JobReply struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Result               string   `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobReply) Reset()         { *m = JobReply{} }
func (m *JobReply) String() string { return proto.CompactTextString(m) }
func (*JobReply) ProtoMessage()    {}
func (*JobReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ba43996b6b0b0cb, []int{1}
}

func (m *JobReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobReply.Unmarshal(m, b)
}
func (m *JobReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobReply.Marshal(b, m, deterministic)
}
func (m *JobReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobReply.Merge(m, src)
}
func (m *JobReply) XXX_Size() int {
	return xxx_messageInfo_JobReply.Size(m)
}
func (m *JobReply) XXX_DiscardUnknown() {
	xxx_messageInfo_JobReply.DiscardUnknown(m)
}

var xxx_messageInfo_JobReply proto.InternalMessageInfo

func (m *JobReply) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *JobReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*JobRequest)(nil), "grpc.JobRequest")
	proto.RegisterType((*JobReply)(nil), "grpc.JobReply")
}

func init() { proto.RegisterFile("MonitoringJob.proto", fileDescriptor_6ba43996b6b0b0cb) }

var fileDescriptor_6ba43996b6b0b0cb = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xf6, 0xcd, 0xcf, 0xcb,
	0x2c, 0xc9, 0x2f, 0xca, 0xcc, 0x4b, 0xf7, 0xca, 0x4f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x49, 0x2f, 0x2a, 0x48, 0x56, 0x72, 0xe7, 0xe2, 0xf2, 0xca, 0x4f, 0x0a, 0x4a, 0x2d, 0x2c,
	0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe2, 0xe2, 0x48, 0x4e, 0x2c, 0x49, 0x4d, 0xcf, 0x2f, 0xaa, 0x94,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf3, 0x85, 0x64, 0xb9, 0xb8, 0x4a, 0x12, 0x8b, 0xd2,
	0x53, 0x4b, 0xe2, 0x4b, 0x8b, 0x72, 0x24, 0x98, 0xc0, 0xb2, 0x9c, 0x10, 0x91, 0xd0, 0xa2, 0x1c,
	0x25, 0x2b, 0x2e, 0x0e, 0xb0, 0x41, 0x05, 0x39, 0x95, 0x42, 0x62, 0x5c, 0x6c, 0xc5, 0x25, 0x89,
	0x25, 0xa5, 0xc5, 0x60, 0x43, 0x38, 0x82, 0xa0, 0x3c, 0x90, 0x78, 0x51, 0x6a, 0x71, 0x69, 0x4e,
	0x09, 0x54, 0x3b, 0x94, 0x67, 0xe4, 0xc4, 0xc5, 0x8b, 0xe2, 0x42, 0x21, 0x43, 0x2e, 0xee, 0xe0,
	0xd4, 0xbc, 0x14, 0xaf, 0xfc, 0x24, 0xcf, 0xbc, 0xb4, 0x7c, 0x21, 0x01, 0x3d, 0x90, 0x5b, 0xf5,
	0x10, 0x0e, 0x95, 0xe2, 0x43, 0x12, 0x29, 0xc8, 0xa9, 0x54, 0x62, 0x48, 0x62, 0x03, 0xfb, 0xca,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x69, 0x30, 0xfe, 0x19, 0xec, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MonitoringJobClient is the client API for MonitoringJob service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MonitoringJobClient interface {
	SendJobInfo(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobReply, error)
}

type monitoringJobClient struct {
	cc *grpc.ClientConn
}

func NewMonitoringJobClient(cc *grpc.ClientConn) MonitoringJobClient {
	return &monitoringJobClient{cc}
}

func (c *monitoringJobClient) SendJobInfo(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobReply, error) {
	out := new(JobReply)
	err := c.cc.Invoke(ctx, "/grpc.MonitoringJob/SendJobInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MonitoringJobServer is the server API for MonitoringJob service.
type MonitoringJobServer interface {
	SendJobInfo(context.Context, *JobRequest) (*JobReply, error)
}

// UnimplementedMonitoringJobServer can be embedded to have forward compatible implementations.
type UnimplementedMonitoringJobServer struct {
}

func (*UnimplementedMonitoringJobServer) SendJobInfo(ctx context.Context, req *JobRequest) (*JobReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendJobInfo not implemented")
}

func RegisterMonitoringJobServer(s *grpc.Server, srv MonitoringJobServer) {
	s.RegisterService(&_MonitoringJob_serviceDesc, srv)
}

func _MonitoringJob_SendJobInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitoringJobServer).SendJobInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.MonitoringJob/SendJobInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitoringJobServer).SendJobInfo(ctx, req.(*JobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MonitoringJob_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.MonitoringJob",
	HandlerType: (*MonitoringJobServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendJobInfo",
			Handler:    _MonitoringJob_SendJobInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "MonitoringJob.proto",
}
